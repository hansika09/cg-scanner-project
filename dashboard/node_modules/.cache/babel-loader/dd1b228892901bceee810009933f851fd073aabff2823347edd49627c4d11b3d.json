{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hansika.asthana\\\\Desktop\\\\fullstack-hansika\\\\dashboard\\\\src\\\\components\\\\FieldArray.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { FieldArray } from 'redux-form';\nimport { Button, Typography, TextField, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FieldArrayComponent = _ref => {\n  let {\n    label,\n    fields,\n    addButtonText,\n    removeButtonText,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(FieldArray, {\n    ...props,\n    component: _ref2 => {\n      let {\n        fields: array,\n        meta: {\n          error,\n          submitFailed\n        }\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => array.push({}),\n          buttonText: addButtonText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }, this), submitFailed && error && /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"error\",\n          variant: \"caption\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), array.map((item, index) => /*#__PURE__*/_jsxDEV(Box, {\n          marginY: 2,\n          p: 1,\n          bgcolor: \"#efefef\",\n          borderRadius: 4,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: [label, \" \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), fields.map(field => /*#__PURE__*/_jsxDEV(TextField, {\n            name: `${item}.${field.name}`,\n            type: field.type,\n            label: field.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => array.remove(index),\n            buttonText: removeButtonText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)), Boolean(array.length) && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => array.push({}),\n          buttonText: addButtonText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = FieldArrayComponent;\nFieldArrayComponent.propTypes = {\n  addButtonText: PropTypes.string,\n  removeButtonText: PropTypes.string,\n  label: PropTypes.string,\n  fields: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired\n  })).isRequired\n};\nFieldArrayComponent.defaultProps = {\n  addButtonText: 'Add',\n  removeButtonText: 'Remove'\n};\nexport default FieldArrayComponent;\nvar _c;\n$RefreshReg$(_c, \"FieldArrayComponent\");","map":{"version":3,"names":["React","Fragment","PropTypes","FieldArray","Button","Typography","TextField","Box","jsxDEV","_jsxDEV","FieldArrayComponent","_ref","label","fields","addButtonText","removeButtonText","props","component","_ref2","array","meta","error","submitFailed","children","onClick","push","buttonText","fileName","_jsxFileName","lineNumber","columnNumber","color","variant","map","item","index","marginY","p","bgcolor","borderRadius","field","name","type","remove","Boolean","length","_c","propTypes","string","arrayOf","shape","isRequired","defaultProps","$RefreshReg$"],"sources":["C:/Users/hansika.asthana/Desktop/fullstack-hansika/dashboard/src/components/FieldArray.js"],"sourcesContent":["import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FieldArray } from 'redux-form';\r\nimport { Button, Typography, TextField, Box } from '@mui/material';\r\n\r\nconst FieldArrayComponent = ({\r\n    label,\r\n    fields,\r\n    addButtonText,\r\n    removeButtonText,\r\n    ...props\r\n  }) => (\r\n    <FieldArray {...props} component={({ fields: array, meta: { error, submitFailed } }) => (\r\n      <Fragment>\r\n        <Button\r\n          onClick={() => array.push({})}\r\n          buttonText={addButtonText}\r\n        />\r\n        {(submitFailed && error) && (\r\n          <Typography color=\"error\" variant=\"caption\">\r\n            {error}\r\n          </Typography>\r\n        )}\r\n        {array.map((item, index) => (\r\n          <Box\r\n            key={index}\r\n            marginY={2}\r\n            p={1}\r\n            bgcolor=\"#efefef\"\r\n            borderRadius={4}\r\n          >\r\n            <Typography variant=\"h5\">\r\n              {label} {index + 1}\r\n            </Typography>\r\n            {fields.map(field => (\r\n              <TextField\r\n               name={`${item}.${field.name}`}\r\n               type={field.type}\r\n               label={field.label}\r\n             />\r\n            ))}\r\n            <Button\r\n              onClick={() => array.remove(index)}\r\n              buttonText={removeButtonText}\r\n            />\r\n          </Box>\r\n        ))}\r\n        {Boolean(array.length) && (\r\n          <Button\r\n            onClick={() => array.push({})}\r\n            buttonText={addButtonText}\r\n          />\r\n        )}\r\n      </Fragment>\r\n    )} />\r\n  );\r\n  \r\n  FieldArrayComponent.propTypes = {\r\n    addButtonText: PropTypes.string,\r\n    removeButtonText: PropTypes.string,\r\n    label: PropTypes.string,\r\n    fields: PropTypes.arrayOf(PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n    })).isRequired,\r\n  };\r\n  \r\n  FieldArrayComponent.defaultProps = {\r\n    addButtonText: 'Add',\r\n    removeButtonText: 'Remove',\r\n  };\r\n  \r\n  export default FieldArrayComponent;\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}