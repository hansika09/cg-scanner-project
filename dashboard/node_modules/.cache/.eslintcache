[{"C:\\Users\\hansika.asthana\\Desktop\\fullstack-hansika\\dashboard\\src\\index.js":"1","C:\\Users\\hansika.asthana\\Desktop\\fullstack-hansika\\dashboard\\src\\App.js":"2","C:\\Users\\hansika.asthana\\Desktop\\fullstack-hansika\\dashboard\\src\\components\\context\\ContextProvider.js":"3","C:\\Users\\hansika.asthana\\Desktop\\fullstack-hansika\\dashboard\\src\\components\\Navbar.js":"4","C:\\Users\\hansika.asthana\\Desktop\\fullstack-hansika\\dashboard\\src\\components\\Home.js":"5","C:\\Users\\hansika.asthana\\Desktop\\fullstack-hansika\\dashboard\\src\\components\\Edit.js":"6","C:\\Users\\hansika.asthana\\Desktop\\fullstack-hansika\\dashboard\\src\\components\\Details.js":"7","C:\\Users\\hansika.asthana\\Desktop\\fullstack-hansika\\dashboard\\src\\components\\FieldArray.js":"8","C:\\Users\\hansika.asthana\\Desktop\\fullstack-hansika\\dashboard\\src\\components\\AddScan.js":"9"},{"size":377,"mtime":1679848660000,"results":"10","hashOfConfig":"11"},{"size":773,"mtime":1680079616630,"results":"12","hashOfConfig":"11"},{"size":752,"mtime":1679848660000,"results":"13","hashOfConfig":"11"},{"size":556,"mtime":1679985829677,"results":"14","hashOfConfig":"11"},{"size":6042,"mtime":1680081001329,"results":"15","hashOfConfig":"11"},{"size":9047,"mtime":1680155859502,"results":"16","hashOfConfig":"11"},{"size":5209,"mtime":1680087353540,"results":"17","hashOfConfig":"11"},{"size":2078,"mtime":1679992920282,"results":"18","hashOfConfig":"11"},{"size":9045,"mtime":1680088866927,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"vfacm2",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"23"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"23"},"C:\\Users\\hansika.asthana\\Desktop\\fullstack-hansika\\dashboard\\src\\index.js",[],[],[],"C:\\Users\\hansika.asthana\\Desktop\\fullstack-hansika\\dashboard\\src\\App.js",[],[],"C:\\Users\\hansika.asthana\\Desktop\\fullstack-hansika\\dashboard\\src\\components\\context\\ContextProvider.js",[],[],"C:\\Users\\hansika.asthana\\Desktop\\fullstack-hansika\\dashboard\\src\\components\\Navbar.js",[],[],"C:\\Users\\hansika.asthana\\Desktop\\fullstack-hansika\\dashboard\\src\\components\\Home.js",["52","53"],[],"import React, { useState, useEffect, useContext } from \"react\";\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\nimport CreateIcon from '@mui/icons-material/Create';\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport { NavLink } from \"react-router-dom\";\nimport { adddata, deldata } from './context/ContextProvider';\nimport { updatedata } from './context/ContextProvider';\nimport { Button, Typography, Stack } from '@mui/material';\n// import Register from \"./Register\";\n\nconst Home = () => {\n  const [getuserdata, setUserData] = useState([]);\n  console.log(getuserdata);\n\n  const { udata, setUdata } = useContext(adddata);\n\n  const { updata, setUPdata } = useContext(updatedata);\n\n  const { dltdata, setDLTdata } = useContext(deldata);\n\n  const getData = async () => {\n    const res = await fetch(\"/getdata\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n\n    const data = await res.json();\n    console.log(data);\n\n    if (res.status === 422 || !data) {\n      console.log(\"Error\");\n    } else {\n      setUserData(data);\n      console.log(\"Get Data\");\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const deleteUser = async (id) => {\n    const res2 = await fetch(`/deleteuser/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      }\n    });\n\n    const deletedata = await res2.json();\n    console.log(deletedata);\n\n    if (res2.status === 422 || !deletedata) {\n      console.log(\"error\");\n    } else {\n      console.log(\"user deleted\");\n      setDLTdata(deletedata);\n      getData();\n    }\n\n  }\n\n\n  return (\n\n    <>\n      {\n        udata ?\n          <>\n            <div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n              <strong>{udata.name}</strong>  Added Successfully!\n              <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n            </div>\n          </> : \"\"\n      }\n      {\n        updata ?\n          <>\n            <div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n              <strong>{updata.name}</strong>  Updated Successfully!\n              <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n            </div>\n          </> : \"\"\n      }\n\n      {\n        dltdata ?\n          <>\n            <div className=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n              <strong>{dltdata.name}</strong>  Deleted Successfully!\n              <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n            </div>\n          </> : \"\"\n      }\n\n      {/* <div className=\"mt-5\"> */}\n      <div className=\"container\">\n        <div className=\"add_btn mt-2 mb-2\">\n          <Typography variant=\"h5\">Scan Results\n            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n            <a href='/register'>\n              <Button variant=\"outlined\" sx={{ height: 40, width: 194 }} onClick={() => \"\"} alignItems=\"right\">\n                <Stack direction=\"row\" alignItems=\"center\" justifyContent={\"center\"}>\n                  <Typography><span style={{ fontWeight: 'bold' }}>ADD NEW SCAN</span></Typography>\n                </Stack>\n              </Button></a>\n          </Typography>\n        </div>\n\n        <table className=\"table\">\n          <thead>\n            <tr className=\"table-white\">\n              <th scope=\"col\"><span style={{ fontWeight: 'normal' }}>ID</span></th>\n              <th scope=\"col\"><span style={{ fontWeight: 'normal' }}>Repository Name</span></th>\n              <th scope=\"col\"><span style={{ fontWeight: 'normal' }}>Status</span></th>\n              <th scope=\"col\"><span style={{ fontWeight: 'normal' }}>Last Updated</span></th>\n              <th scope=\"col\"><span style={{ fontWeight: 'normal' }}>Findings</span></th>\n              <th scope=\"col\"><span style={{ fontWeight: 'normal' }}>View</span></th>\n              <th scope=\"col\"><span style={{ fontWeight: 'normal' }}>Edit</span></th>\n              <th scope=\"col\"><span style={{ fontWeight: 'normal' }}>Remove</span></th>\n              {/* <th scope=\"col\"></th> */}\n            </tr>\n          </thead>\n          <tbody>\n            {getuserdata.map((element, id) => {\n              return (\n                <>\n                  <tr className=\"table-white\">\n                    <th scope=\"row\">{id + 1}</th>\n                    <td>{element.name}</td>\n                    <td>{element.status}</td>\n                    <td>{element.queued}</td>\n                    <td>{\n                      element.severity ? element.severity : \"No Findings\"\n                    }</td>\n                    {/* <td className=\"d-flex justify-content-between\"> */}\n                    <td>\n                      <NavLink to={`view/${element._id}`}>\n                        <button className=\"btn\">\n                          <RemoveRedEyeIcon color=\"success\"/>\n                        </button>\n                      </NavLink>\n                      </td>\n                      <td>\n                      <NavLink to={`edit/${element._id}`}><button className=\"btn\"><CreateIcon color=\"primary\"/></button></NavLink>\n                      </td>\n                      <td>\n                      <button className=\"btn\" onClick={() => deleteUser(element._id)}><DeleteOutlineIcon color=\"error\"/></button>\n                    </td>\n                  </tr>\n                </>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n      {/* </div> */}\n    </>\n  );\n};\n\nexport default Home;","C:\\Users\\hansika.asthana\\Desktop\\fullstack-hansika\\dashboard\\src\\components\\Edit.js",["54","55"],[],"C:\\Users\\hansika.asthana\\Desktop\\fullstack-hansika\\dashboard\\src\\components\\Details.js",["56","57","58","59"],[],"import React, { useEffect, useState } from \"react\";\nimport CreateIcon from \"@mui/icons-material/Create\";\nimport DeleteOutlineIcon from \"@mui/icons-material/DeleteOutline\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport HistoryToggleOffIcon from \"@mui/icons-material/HistoryToggleOff\";\nimport { NavLink, useNavigate, useParams } from \"react-router-dom\";\nimport { Typography, Box, Paper, Divider } from \"@mui/material\";\n\nconst Details = () => {\n  const [getuserdata, setUserData] = useState([]);\n  console.log(getuserdata);\n\n  const { id } = useParams(\"\");\n  console.log(id);\n\n  const navigate = useNavigate(\"\");\n\n  const getData = async () => {\n    const res = await fetch(`/getuser/${id}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n\n    const data = await res.json();\n    console.log(data);\n\n    if (res.status === 422 || !data) {\n      console.log(\"Error\");\n    } else {\n      setUserData(data);\n      console.log(\"Get Data\");\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const deleteUser = async (id) => {\n    const res2 = await fetch(`/deleteuser/${id}`, {\n        method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n\n    const deletedata = await res2.json();\n        console.log(deletedata);\n\n        if (res2.status === 422 || !deletedata) {\n            console.log(\"error\");\n        } else {\n            console.log(\"user deleted\");\n            navigate(\"/\");\n        }\n\n    }\n\n  return (\n    <div className=\"container\">   \n      <div className=\"add_btn mt-2 mb-2\">\n        <Typography variant=\"h5\">Scan Results\n          &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n          &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n          &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n          &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n          &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \n          <NavLink to={`/edit/${getuserdata._id}`}><button className=\"btn\"><CreateIcon color=\"primary\"/></button></NavLink>\n          <button className=\"btn\" onClick={() => deleteUser(getuserdata._id)}><DeleteOutlineIcon color=\"error\"/></button>\n        </Typography>\n      </div>\n\n      <table sx={{ minWidth: 500 }} aria-label=\"custom pagination table\">\n\n      </table>\n\n\n      <div className=\"column\">\n        <Box component={Paper} p={3}>\n        <Box p={4} bgcolor=\"#efefef\" borderRadius={4}>\n          <div className=\"row\">\n          <div className=\"col-6\">\n          <center>\n          <div className=\"row\">\n            <label><b>Details:</b></label>\n          </div>\n          <Divider color=\"black\"/>\n          <br></br>\n          <div className=\"row\">\n          <label>Repository Name: &nbsp; <span style={{ fontWeight: 400 }}>{getuserdata.name}</span></label>\n          </div>\n          <br></br>\n          <div className=\"row\">\n          <label>Status: &nbsp; <span style={{ fontWeight: 400 }}>{getuserdata.status}</span></label>\n          </div>\n          <br></br>\n          <div className=\"row\">\n          <label>Queued At: &nbsp; <span style={{ fontWeight: 400 }}>{getuserdata.queued}</span></label>\n          </div>\n          <br></br>\n          <div className=\"row\">\n          <label>Scanned At: &nbsp; <span style={{ fontWeight: 400 }}>{getuserdata.scanning}</span></label>\n          </div>\n          <br></br>\n          <div className=\"row\">\n          <label>Finished At: &nbsp; <span style={{ fontWeight: 400 }}>{getuserdata.finished}</span></label>\n          </div>\n          </center>\n          </div>   \n          \n          <div className=\"col-6\">\n          <center>\n          <div className=\"row\">\n            <label><b>Findings:</b></label>\n          </div>\n          <Divider color=\"black\"/>\n          <br></br>\n          <div className=\"row\">\n            <label>Type: &nbsp; <span style={{ fontWeight: 400 }}>{getuserdata.type}</span></label>\n          </div>\n          <br></br>\n          <div className=\"row\">\n            <label>Rule ID: &nbsp; <span style={{ fontWeight: 400 }}>{getuserdata.rule}</span></label>\n          </div>\n          <br></br>\n          <div className=\"row\">\n            <label>Path: &nbsp; <span style={{ fontWeight: 400 }}>{getuserdata.path}</span></label>\n          </div>\n          <br></br>\n          <div className=\"row\">\n            <label>Position: &nbsp; <span style={{ fontWeight: 400 }}>{getuserdata.pos}</span></label>\n          </div>\n          <br></br>\n          <div className=\"row\">\n            <label>Description: &nbsp; <span style={{ fontWeight: 400 }}>{getuserdata.desc}</span></label>\n          </div>\n          <br></br>\n          <div className=\"row\">\n            <label>Severity: &nbsp; <span style={{ fontWeight: 400 }}>{getuserdata.severity}</span></label>\n          </div>\n          </center>\n            \n          </div>       \n          </div>\n          </Box>\n        </Box>\n      </div>\n    </div>\n  );\n};\n\nexport default Details;","C:\\Users\\hansika.asthana\\Desktop\\fullstack-hansika\\dashboard\\src\\components\\FieldArray.js",[],[],[],"C:\\Users\\hansika.asthana\\Desktop\\fullstack-hansika\\dashboard\\src\\components\\AddScan.js",["60","61","62"],[],"import React, { useState, useContext } from \"react\";\nimport { NavLink, useNavigate, Form } from \"react-router-dom\";\nimport { adddata } from \"./context/ContextProvider\";\nimport { Button, Typography, Stack, TextField, Select, Paper, Box, MenuItem } from '@mui/material';\n\n\nconst statusOptions = [\"Queued\", \"In Progress\", \"Success\", \"Failed\"];\n\n\n// const findingFields = [\n//   {\n//     name: 'type',\n//     label: 'Type',\n//     type: 'text',\n//   },\n//   {\n//     name: 'ruleId',\n//     label: 'Rule Id',\n//     type: 'text',\n//   },\n//   {\n//     name: 'location.path',\n//     label: 'Location Path',\n//     type: 'text',\n//   },\n//   {\n//     name: 'location.positions.begin.line',\n//     label: 'Begin position',\n//     type: 'text',\n//   },\n//   {\n//     name: 'metadata.description',\n//     label: 'Description',\n//     type: 'text',\n//   },\n//   {\n//     name: 'metadata.severity',\n//     label: 'Severity',\n//     type: 'text',\n//   },\n// ];\n\nconst Register = () => {\n  const { udata, setUdata } = useContext(adddata);\n\n  const navigate = useNavigate(\"\");\n\n  const [inpval, setINP] = useState({\n    name: \"\",\n    status: \"\",\n    queued: \"\",\n    scanning: \"\",\n    finished: \"\",\n    type: \"\",\n    rule: \"\",\n    path: \"\",\n    pos: \"\",\n    desc: \"\",\n    severity: \"\",\n  });\n\n  const setdata = (e) => {\n    console.log(e.target.value);\n    const { name, value } = e.target;\n    setINP((preval) => {\n      return {\n        ...preval,\n        [name]: value,\n      };\n    });\n  };\n\n  const addInpData = async (e) => {\n    e.preventDefault();\n    const {\n      name,\n      status,\n      queued,\n      scanning,\n      finished,\n      type,\n      rule,\n      path,\n      pos,\n      desc,\n      severity,\n    } = inpval;\n\n    const res = await fetch(\"/register\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name,\n        status,\n        queued,\n        scanning,\n        finished,\n        type,\n        rule,\n        path,\n        pos,\n        desc,\n        severity,\n      }),\n    });\n\n    const data = await res.json();\n    console.log(data);\n\n    if (res.status === 422 || !data) {\n      alert(\"Error\");\n      console.log(\"Error\");\n    } else {\n      navigate(\"/\");\n      setUdata(data);\n      console.log(\"Data has been added\");\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"add_btn mt-2 mb-2\">\n        <Typography variant=\"h5\">Add New Scan\n          &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n          &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n          &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n          &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n          <a href='./'>\n            <Button variant=\"outlined\" sx={{ height: 40, width: 194 }} onClick={() => \"\"} alignItems=\"right\">\n              <Stack direction=\"row\" alignItems=\"center\" justifyContent={\"center\"}>\n                <Typography><span style={{ fontWeight: 'bold' }}>GO TO DASHBOARD</span></Typography>\n              </Stack>\n            </Button>\n          </a>\n        </Typography>\n      </div>\n\n      <div className=\"column\">\n        <Box component={Paper} p={3}>\n          <div className=\"row\">\n            <TextField label=\"Repository Name\" name=\"name\" onChange={setdata} />\n          </div>\n\n          <div className=\"row\">\n            <>Status</>\n            <Select name=\"status\" onChange={setdata}>\n              {statusOptions.map((option) => (\n                <MenuItem key={option} value={option}>{option}</MenuItem>\n              ))}</Select>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-3\">\n              <label>Queued At</label>\n              <input\n                type=\"datetime-local\"\n                value={inpval.queued}\n                onChange={setdata}\n                name=\"queued\"\n                className=\"form-control\"\n              />\n            </div>\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            <div className=\"col-3\">\n              <>Scanning At</>\n              <input\n                type=\"datetime-local\"\n                value={inpval.scanning}\n                onChange={setdata}\n                name=\"scanning\"\n                className=\"form-control\"\n              />\n            </div>\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            <div className=\"col-3\">\n              <>Finished At</>\n              <input\n                type=\"datetime-local\"\n                value={inpval.finished}\n                onChange={setdata}\n                name=\"finished\"\n                className=\"form-control\"\n              />\n            </div>\n          </div>\n\n          <br></br>\n\n          {/* <div className=\"row\">\n            <FieldArray\n              name=\"findings\"\n              label=\"Finding\"\n              addButtonText=\"Add finding\"\n              removeButtonText=\"Remove\"\n              fields={findingFields}/>\n          </div> */}\n\n          <Box m={1} p={3} bgcolor=\"#efefef\" borderRadius={4}>\n            <div className=\"row\">\n              <Typography variant=\"h5\">Findings</Typography>\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n              <div className=\"row\">\n                <TextField label=\"Type\" name=\"type\" onChange={setdata} />\n              </div>\n\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n\n              <div className=\"row\">\n                <TextField label=\"Rule Id\" name=\"rule\" onChange={setdata} />\n\n              </div>\n\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n\n              <div className=\"row\">\n                <TextField label=\"Path\" name=\"path\" onChange={setdata} />\n              </div>\n\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n\n              <div className=\"row\">\n                <TextField label=\"Position\" name=\"pos\" onChange={setdata} />\n              </div>\n\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n\n              <div className=\"row\">\n                <TextField label=\"Description\" name=\"desc\" onChange={setdata} />\n              </div>\n\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n\n              <div className=\"row\">\n                <TextField label=\"Severity\" name=\"severity\" onChange={setdata} />\n              </div>\n\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n\n            </div>\n\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n\n            <Button variant=\"outlined\" sx={{ height: 40, width: 150 }} onClick={addInpData} alignItems=\"right\" >\n              <Stack direction=\"row\" alignItems=\"center\" justifyContent={\"center\"}>\n                <Typography><span style={{ fontWeight: 'bold' }}>CREATE SCAN</span></Typography>\n              </Stack>\n            </Button>\n          </Box>\n        </Box>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;",{"ruleId":"63","severity":1,"message":"64","line":15,"column":18,"nodeType":"65","messageId":"66","endLine":15,"endColumn":26},{"ruleId":"63","severity":1,"message":"67","line":17,"column":19,"nodeType":"65","messageId":"66","endLine":17,"endColumn":28},{"ruleId":"63","severity":1,"message":"68","line":10,"column":11,"nodeType":"65","messageId":"66","endLine":10,"endColumn":17},{"ruleId":"69","severity":1,"message":"70","line":62,"column":6,"nodeType":"71","endLine":62,"endColumn":8,"suggestions":"72"},{"ruleId":"63","severity":1,"message":"73","line":4,"column":8,"nodeType":"65","messageId":"66","endLine":4,"endColumn":12},{"ruleId":"63","severity":1,"message":"74","line":5,"column":8,"nodeType":"65","messageId":"66","endLine":5,"endColumn":19},{"ruleId":"63","severity":1,"message":"75","line":6,"column":8,"nodeType":"65","messageId":"66","endLine":6,"endColumn":28},{"ruleId":"69","severity":1,"message":"76","line":40,"column":6,"nodeType":"71","endLine":40,"endColumn":8,"suggestions":"77"},{"ruleId":"63","severity":1,"message":"78","line":2,"column":10,"nodeType":"65","messageId":"66","endLine":2,"endColumn":17},{"ruleId":"63","severity":1,"message":"79","line":2,"column":32,"nodeType":"65","messageId":"66","endLine":2,"endColumn":36},{"ruleId":"63","severity":1,"message":"80","line":44,"column":11,"nodeType":"65","messageId":"66","endLine":44,"endColumn":16},"no-unused-vars","'setUdata' is assigned a value but never used.","Identifier","unusedVar","'setUPdata' is assigned a value but never used.","'updata' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getdata'. Either include it or remove the dependency array.","ArrayExpression",["81"],"'Card' is defined but never used.","'CardContent' is defined but never used.","'HistoryToggleOffIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["82"],"'NavLink' is defined but never used.","'Form' is defined but never used.","'udata' is assigned a value but never used.",{"desc":"83","fix":"84"},{"desc":"85","fix":"86"},"Update the dependencies array to be: [getdata]",{"range":"87","text":"88"},"Update the dependencies array to be: [getData]",{"range":"89","text":"90"},[1367,1369],"[getdata]",[1091,1093],"[getData]"]